{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","SubApp","contacts","setGetcontacts","useState","newName","setNewName","newNumber","setNewNumber","newMessage","setMessage","newMessageError","setMessageError","handleSubmit","event","preventDefault","map","contact","name","includes","window","confirm","console","log","filter","personService","number","then","response","setTimeout","prev","length","alert","handleName","target","value","handleNumber","message","messageError","data","InfoMessage","className","ErrorMessage","NewContactForm","onSubmit","onChange","type","Search","newSearch","setNewSearch","filteredContacts","person","toLowerCase","onClick","catch","error","handleDelete","App","setContacts","getcontacts","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d83f3234.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons/'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n    return (\n        axios.delete(`${baseUrl}/${id}`)\n    )\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update, \n  remove: remove\n}","import React, { useState , useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ contacts, setContacts] = useState([]) \n  const [ getcontacts, setGetcontacts ] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setContacts(response.data)\n      })\n  }, [getcontacts])\n\n  return (\n    <>\n      <SubApp contacts={contacts} setGetcontacts={setGetcontacts} />\n    </>\n  )\n}\n\nconst SubApp = ({ contacts, setGetcontacts }) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newMessage, setMessage ] = useState('')\n  const [ newMessageError, setMessageError ] = useState('')\n\n  const handleName = (event) => (setNewName(event.target.value) || console.log(event.target.value))\n  const handleNumber = (event) => (setNewNumber(event.target.value) || console.log(event.target.value))\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (contacts.map((contact) => contact.name).includes(newName)) {\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log(contacts)\n        const contact = contacts.filter((contact) => contact.name === newName)[0]\n        console.log(contact)\n\n        personService.update(contact.id, { name: contact.name, number: newNumber, id: contact.id })\n          .then(response => {\n            setMessage(`Changed ${newName}'s number to ${newNumber}`)\n            setTimeout(function() {\n              setGetcontacts(prev => !prev)\n            }, response.length > 0)\n            setTimeout(function() {\n              setMessage('')\n            },  2000);\n          })\n      }\n    } \n    else if (newName.length === 0 || newNumber.length === 0) {\n      window.alert(`Fields can not be empty!`)\n    }\n    else {\n      personService.create({ name: newName, number: newNumber }).then(response => {\n        setMessage(`Added: ${newName}`)\n        setTimeout(function() {\n          setGetcontacts(prev => !prev)\n        }, response.length > 0)\n        setTimeout(function() {\n          setMessage('')\n        }, 2000);\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <div>\n      <h2>PhoneBook 1.0.0</h2>\n      <br />\n      <NewContactForm handleSubmit={handleSubmit} newName={newName} handleName={handleName}\n      newNumber={newNumber} handleNumber={handleNumber} message={newMessage} messageError={newMessageError} />\n      <br />\n      <Search data={contacts} setMessage={setMessage} \n      setMessageError={setMessageError} setGetcontacts={setGetcontacts} />\n    </div>\n  )\n}\n\n\nconst InfoMessage = ({ message }) => {\n  if (message.length > 0) {\n    return (\n      <div className='msg'>{message}</div>\n    )\n  } else {\n    return (<></>)\n  }\n\n}\n\nconst ErrorMessage = ({ message }) => {\n  if (message.length > 0) {\n    return (\n      <div className='msgError'>{message}</div>\n    )\n  } else {\n    return (<></>)\n  }\n\n}\n\n\nconst NewContactForm = ({ handleSubmit, newName, handleName,\n  newNumber, handleNumber, message, messageError }) => {\n  return (\n    <>\n      <ErrorMessage message={messageError} />\n      <InfoMessage message={message} />\n      <h3>Add new contact:</h3>\n      <form onSubmit={handleSubmit}>\n        <div>Name: <input value={newName} onChange={handleName} /></div>\n        <div>Number: <input value={newNumber} onChange={handleNumber}/></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    </>\n  )\n}\n\n\nconst Search = ({ data, setMessage, setMessageError, setGetcontacts }) => {\n  const [ newSearch, setNewSearch ] = useState('')\n\n  const filteredContacts = data.filter(\n    person => {\n      return (\n        person.name.toLowerCase().includes(newSearch.toLowerCase())\n        || person.number.toLowerCase().includes(newSearch.toLowerCase())\n      )\n    }\n  )\n\n  const handleSearch = (event) => (setNewSearch(event.target.value) || console.log(event.target.value))\n\n  const handleDelete = (contact) => {\n    if (window.confirm(`Delete ${contact.name}?`)) {\n      personService.remove(contact.id)\n        .then(response => {\n          console.log('Deleted!')\n          setMessage(`Removed ${contact.name}`) \n          setTimeout(function() {\n            setGetcontacts(prev => !prev)\n          }, response.length > 0)\n        })\n      .catch(error => {\n        console.log('ERROR!')\n        setMessageError(`Information of ${contact.name} has already been removed from the server!`)\n        setTimeout(function() {\n          setGetcontacts(prev => !prev)\n        }, error.length > 0)\n      })\n    }\n    setTimeout(function() {\n      setMessageError('')\n      setMessage('')\n    },  2000);\n  }\n\n  return (\n    <>\n      <div>\n      <h3>Contacts:</h3>\n        <div>Filter: <input value={newSearch} onChange={handleSearch}/></div>\n      </div>\n      <br />\n      <div>\n        {filteredContacts.map((contact) => {\n          return(\n            <div key={contact.name}>\n              {contact.name}: {contact.number} |\n              <button value={contact} onClick={() => handleDelete(contact)}>Delete</button>\n            </div>\n        )})}\n      </div>\n    </>\n\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}